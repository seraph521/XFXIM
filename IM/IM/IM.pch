//
//  IM.pch
//  IM
//
//  Created by LT-MacbookPro on 17/4/19.
//  Copyright © 2017年 XFX. All rights reserved.
//

#ifndef IM_pch
#define IM_pch

// Include any system framework and library headers here that should be included in all compilation units.
// You will also need to set the Prefix Header build setting of one or more of your targets to reference this file.

//全局宏定义
//    屏幕的宽高度
#define SCREEN_SIZE   [UIScreen mainScreen].bounds.size

#define SCREEN_WIDTH  ([UIScreen mainScreen].bounds.size.width)

#define SCREEN_HEIGHT ([UIScreen mainScreen].bounds.size.height)

#define WEAKSELF typeof(self) __weak weakSelf = self;
// 沙盒路路径
#define DocumentsPath [NSHomeDirectory() stringByAppendingPathComponent:@"Documents"]
// 随机色
#define DreamRandomColor DreamColor(arc4random_uniform(256), arc4random_uniform(256), arc4random_uniform(256))
#define DreamColor(r, g, b) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:1.0]
#define DreamColorWithAlpha(r, g, b, a) [UIColor colorWithRed:(r)/255.0 green:(g)/255.0 blue:(b)/255.0 alpha:(a)]

#import "IMChatService.h"
#import "IMLoginUserModel.h"
#import "IMLoginUserModelArchieveTool.h"
#import "IMUtil.h"
#import "IMDatabaseHelper.h"
#import "IMNotificationDefine.h"
#import "GDCacheService.h"

#import "UITableView+FDTemplateLayoutCell.h"
#import "Masonry.h"
#import "MJExtension.h"
#import "MJRefresh.h"
#import <MagicalRecord/MagicalRecord.h>
#import <AVOSCloud/AVOSCloud.h>
#import <AVOSCloudIM/AVOSCloudIM.h>
#import <SVProgressHUD.h>

//分类
#import "UIImage+Category.h"
#import "UIView+LayoutFit.h"
#import "NSString+Category.h"
#import "UIView+Category.h"


// 单例模式

#define singleH(name) +(instancetype)share##name;

#if __has_feature(objc_arc)

#define singleM(name) static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)share##name\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}
#else
#define singleM static id _instance;\
+(instancetype)allocWithZone:(struct _NSZone *)zone\
{\
static dispatch_once_t onceToken;\
dispatch_once(&onceToken, ^{\
_instance = [super allocWithZone:zone];\
});\
return _instance;\
}\
\
+(instancetype)shareTools\
{\
return [[self alloc]init];\
}\
-(id)copyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
-(id)mutableCopyWithZone:(NSZone *)zone\
{\
return _instance;\
}\
-(oneway void)release\
{\
}\
\
-(instancetype)retain\
{\
return _instance;\
}\
\
-(NSUInteger)retainCount\
{\
return MAXFLOAT;\
}
#endif

//




#endif /* IM_pch */
